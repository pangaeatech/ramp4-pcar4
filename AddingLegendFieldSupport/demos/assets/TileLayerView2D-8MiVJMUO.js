import{a3 as u,bK as w,O as l,a1 as y,i as I,q as n,v as f,x as T}from"./main-wjLrsw2z.js";import{c as V}from"./GraphicsCollection-DA3gVqqb.js";import"./colorUtils-CGIegwD7.js";import"./defaultCIMValues-CQAn2izL.js";import"./enums-_AFKM9Yk.js";import"./floatRGBA-y6dZBMDU.js";import"./definitions-CASyCajO.js";import"./UpdateTracking2D-uu-7S88u.js";import"./GeometryUtils-BXXIezNL.js";import"./CIMSymbolHelper-DDZ6PO0F.js";import"./vec2f32-CaVKkSa6.js";import"./OverrideHelper-DObis1f1.js";import"./EffectView-BHuJMbUl.js";import"./Container-ki8wgyu9.js";import{h as H,p as v,r as C}from"./enums-DokEOeUh.js";import"./WGLContainer-DDJuAlHY.js";import"./enums-UBzvFP7O.js";import"./Texture-CGyf7NfV.js";import"./Utils-DP0yI9xM.js";import"./MapView-C3yD8pyM.js";import"./StyleDefinition-CQkO14Uj.js";import"./constants-B-jzO-JJ.js";import"./GridShader-Cb4NpDqn.js";import"./pbf-Byp06Zvx.js";import"./TechniqueType-CFPo0AVB.js";import"./FramebufferObject-3U2nz6KE.js";import"./FeatureCommandQueue-C4tFZXDU.js";import"./PieChartMeshWriter-CaUjz_W0.js";import"./constants-BFLErLYb.js";import"./TimeOnly-5WFwcN0B.js";import"./UnknownTimeZone-B0EljvFV.js";import"./renderState-D2jq0MiL.js";import"./glsl-Cj7KC756.js";import"./testSVGPremultipliedAlpha-Bt1Pfa5f.js";import{O as q}from"./GraphicsView2D-l27b3TeT.js";import"./earcut-D9gy186-.js";import"./vec3f32-WCVSSNPR.js";import"./normalizeUtilsCommon-DJgDsaWr.js";import"./asyncUtils-BI9hixG5.js";import"./UpdatingHandles-CBdbeOF2.js";import"./projectionUtils-Ck7cBeJK.js";import{r as U,o as m,n as d}from"./imageUtils-tv2udqP2.js";import{S as b}from"./LayerView2D-CmymLRRP.js";import{a as P}from"./HighlightGraphicContainer-DDdMVE4l.js";import{e as _}from"./TileKey-DE0dvn4b.js";import{u as Q}from"./LayerView-Cv0dmbQO.js";import{i as S}from"./RefreshableLayerView-CiNrs7Sx.js";import{_ as G,P as L,i as k}from"./MapServiceLayerViewHelper-C6kWjpl2.js";import{r as F}from"./drapedUtils-utfiskbA.js";import{c as z}from"./utils-B9iQJ2Oh.js";import{g as E}from"./Scheduler-C8f_KTyU.js";import"./preload-helper-B76NpbEU.js";import"./vec42-CKs01hkn.js";import"./common-DQOJ18NT.js";import"./vec4f64-DPb6J-GU.js";import"./ReactiveMap-YVOuIlWn.js";import"./BidiEngine-QXap_35O.js";import"./fontUtils-d3g05edu.js";import"./OptimizedGeometry-ClUotnbt.js";import"./memoryEstimations-upqF-ypY.js";import"./utils-BV7DBUkI.js";import"./rasterizingUtils-sGu5mTWY.js";import"./mat2d-D9DBP-jx.js";import"./mat2df32-Dpt2CT5P.js";import"./vec2-ChnYg_BJ.js";import"./Rect-CUzevAry.js";import"./BoundingBox-BSOANoLO.js";import"./FieldsIndex-a2DTlUTr.js";import"./timeZoneUtils-DIizqSwQ.js";import"./ArcadeExpression-7GlLenFz.js";import"./callExpressionWithFeature-CBX3uwrb.js";import"./quantizationUtils-CkR36e3r.js";import"./enum-5YUFr6E8.js";import"./parser-DnvMkHgv.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-DPRg57JE.js";import"./Queue-fsp6PtSa.js";import"./quickselect-QQC62dOK.js";import"./Query-KleKJW6A.js";import"./Field-DE3-9_9Q.js";import"./fieldType-a-b4v4ZF.js";import"./TimeExtent-DunUFTD-.js";import"./ProgramTemplate-DjS7t0Wa.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./VertexArrayObject-DW3U-luJ.js";import"./mat3-CruJiiUv.js";import"./vec32-B2d58gwM.js";import"./config-DHajyIwB.js";import"./vec2f64-Cgb6qxNH.js";import"./featureConversionUtils-C7q1n0w4.js";import"./OptimizedFeature-Bes7fG-3.js";import"./OptimizedFeatureSet-BR8EEvDc.js";import"./getDataTypeBytes-D2DiHx_d.js";import"./Cyclical-K-a9e6FI.js";import"./CollectionFlattener-DuBWTMGd.js";import"./workers-3CV1j67U.js";import"./intl-BWrXByQm.js";import"./TileInfo-DjcLk_hy.js";import"./TileKey-DZd6gJy7.js";import"./jsxFactory-Bu1kDtUq.js";import"./uuid-Cl5lrJ4c.js";import"./sanitizerUtils-CJlLEeXg.js";import"./Map-D_XIFOSm.js";import"./Basemap-Ct6bKEIW.js";import"./loadAll-9O19YMxO.js";import"./PortalItem-CngPoFkL.js";import"./writeUtils-B5CiCdmj.js";import"./persistable-BEmu_IE8.js";import"./MD5-MtSiOt06.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceExtension-DmBu1b2A.js";import"./PolygonCollection-Z-FpDLJ8.js";import"./editableLayers-DQL1HwJR.js";import"./TablesMixin-Cfrxm1uh.js";import"./Layer-Bp_m3QXA.js";import"./HeightModelInfo-ONo8Apys.js";import"./IViewEvents-Bci6PjlS.js";import"./mat2df64-CH-gvrN5.js";import"./a11yUtils-BUg244nq.js";import"./projectionUtils-LODmI47t.js";import"./ViewingMode-Chk7YAAL.js";import"./normalizeUtils-BiO-taLr.js";import"./utils-DDnzVFtW.js";import"./utils-3IQe4eYa.js";import"./unitBezier-B1N-tmtC.js";import"./imageUtils-COkrnz6y.js";import"./capabilities-Bi6C4OG6.js";import"./modeUtils-1fSvrGRf.js";import"./ILyr3DWasmPerSceneView-CIC-HPGZ.js";import"./ColorBackground-BzD1E4u7.js";import"./GraphShaderModule-DTthc-2_.js";import"./ShaderBuilder-CyYjVqIV.js";import"./BindType-BBwFZqyN.js";import"./utils-OMxPsJsC.js";import"./CircularArray-CujHzHWW.js";import"./SymbolFader-CEitvMnP.js";import"./lengthUtils-XtUZYmHh.js";import"./streamLayerUtils-CKwt2uXH.js";import"./QueueProcessor-DF1tQT3B.js";import"./libtess-DZfftq00.js";import"./basicInterfaces-CZwQPxTp.js";import"./AttributeStore-CqLPTl1n.js";import"./labelUtils-D988wMte.js";import"./diffUtils-vX0-Q9_W.js";import"./queryUtils-CXWKWfTW.js";import"./json-Wa8cmqdu.js";import"./timeSupport-CY3WL7dT.js";import"./normalizeUtilsSync-Cd1fBJlh.js";import"./mat3f64-B5o_lm6j.js";import"./dehydratedFeatures-aftNe0Q4.js";import"./BitmapTechnique-5CCu2Os0.js";import"./bitmapUtils-Dpmcv3kE.js";import"./TileContainer-DkhuJQ76.js";import"./utils-BQBvadb7.js";import"./layerViewUtils-B65w2uF3.js";import"./AGraphicContainer-Q0bXLdaj.js";import"./TechniqueInstance-DFLUn5kY.js";import"./scaleUtils-DhTu_gnZ.js";import"./floorFilterUtils-DKzVzLpH.js";import"./sublayerUtils-CYmwj2o7.js";import"./popupUtils-B459BCpX.js";import"./Version-BeJWRrcp.js";import"./debugFlags-WS_cW9hv.js";const W=[0,0];let s=class extends S(U(b(Q))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new V,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),this._highlightView?.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,i=this.tilemapCache;if(this._tileInfoView=new H(this.layer.tileInfo,this.layer.fullExtent,i?.effectiveMinLOD,i?.effectiveMaxLOD),this._fetchQueue=new v({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(e,r)=>this.fetchTile(e,r),scheduler:this.scheduler,priority:E.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new C({cachePolicy:"keep",resampling:this.resampling,acquireTile:e=>this.acquireTile(e),releaseTile:e=>this.releaseTile(e),tileInfoView:this._tileInfoView}),G(this,this.layer)){const e=this._highlightView=new q({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new P(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new L({createFetchPopupFeaturesQueryGeometry:(r,o)=>F(r,o,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:({graphic:r,property:o})=>e.graphicUpdateHandler({graphic:r,property:o}),layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._popupHighlightHelper?.destroy(),this._highlightView?.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(t,i){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,i):[]}highlight(t,i){const e=k(t);if(e.length===0)return u();const r=i?.name??z;return this._addHighlightGraphics(e,r),u(()=>!this.destroyed&&this._removeHighlightGraphics(e,r))}_processHighlight(){const t=this._getHighlights();this._highlightView?.setHighlight(t)}_addHighlightGraphics(t,i){this._highlightGraphics.addMany(t),this._addHighlights(t.map(e=>e.uid),i)}_removeHighlightGraphics(t,i){this._highlightGraphics.removeMany(t),this._removeHighlights(t.map(e=>e.uid),i)}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return w(this.layer.tileInfo?.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const i=this._bitmapView.createTile(t),e=i.bitmap;return[e.x,e.y]=this._tileInfoView.getTileCoords(W,i.key),e.resolution=this._tileInfoView.getTileResolution(i.key),[e.width,e.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(i)),this._bitmapView.addChild(i),this.requestUpdate(),i}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,i={}){return this.tilemapCache?this._fetchTileWithTilemapCache(t,i):this._fetchTileWithoutTilemapCache(t,i)}async _fetchTileWithoutTilemapCache(t,i={}){const{signal:e,resamplingLevel:r=0}=i;try{return await this._fetchImage(t,e)}catch(o){if(l(o))throw o;if(!this.resampling)return m(this._tileInfoView.tileInfo.size);if(r<3){const p=this._tileInfoView.getTileParentId(t.id);if(p){const h=new _(p),a=await this._fetchTileWithoutTilemapCache(h,{...i,resamplingLevel:r+1});return d(this._tileInfoView,a,h,t)}}return m(this._tileInfoView.tileInfo.size)}}async _fetchTileWithTilemapCache(t,i={}){const e=this.tilemapCache,{signal:r,resamplingLevel:o=0}=i,p=new _(0,0,0,0);let h,a=null;try{if(a=await e.fetchAvailabilityUpsample(t.level,t.row,t.col,p,{signal:r}),!this.resampling&&p.level!==t.level)return await y(i),m(this._tileInfoView.tileInfo.size);h=await this._fetchImage(p,r)}catch(c){if(l(c))throw c;if(this.resampling&&a==="unknown"&&o<3){const g=this._tileInfoView.getTileParentId(t.id);if(g){p.set(g);try{h=await this._fetchTileWithTilemapCache(p,{...i,resamplingLevel:o+1})}catch{}}}}return h?this.resampling?d(this._tileInfoView,h,p,t):h:m(this._tileInfoView.tileInfo.size)}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const i=await this._fetchQueue.push(t.key);t.bitmap.source=i,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(i){l(i)||I.getLogger(this).error(i)}this.requestUpdate()}}async _fetchImage(t,i){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:i})}};n([f()],s.prototype,"resampling",null),n([f()],s.prototype,"tilemapCache",null),s=n([T("esri.views.2d.layers.TileLayerView2D")],s);const Ae=s;export{Ae as default};
