import{p as v,c6 as w,b_ as S,aq as O,q as i,v as r,x as d,I as b,o as F,a$ as q,s as m,H as I,gc as N,bc as _}from"./main-wjLrsw2z.js";import J from"./FeatureLayer-CakGP9Bw.js";import{p as x}from"./workers-3CV1j67U.js";import{g as C}from"./FeatureSet-DDy_uGyV.js";import{y as P}from"./clientSideDefaults-MZbm721J.js";import{R as l}from"./Query-KleKJW6A.js";import"./preload-helper-B76NpbEU.js";import"./MultiOriginJSONSupport-BCcgs34R.js";import"./layerContainerType-C5CzMsLd.js";import"./FeatureLayerBase-PxRJZIzd.js";import"./Field-DE3-9_9Q.js";import"./fieldType-a-b4v4ZF.js";import"./HeightModelInfo-ONo8Apys.js";import"./OperationalLayer-CnVWOBVY.js";import"./ElevationInfo-Cuk6Yfdd.js";import"./lengthUtils-XtUZYmHh.js";import"./TimeExtent-DunUFTD-.js";import"./timeZoneUtils-DIizqSwQ.js";import"./labelingInfo-Xsm52X57.js";import"./asyncUtils-BI9hixG5.js";import"./uuid-Cl5lrJ4c.js";import"./SimpleRenderer-YpEkC-__.js";import"./commonProperties-DmPwhA7i.js";import"./colorRamps-4f8nNmtP.js";import"./ColorStop-xCRZETL3.js";import"./visualVariableUtils-B2WgDQ6g.js";import"./UniqueValueRenderer-ChsEGwbB.js";import"./diffUtils-vX0-Q9_W.js";import"./RendererLegendOptions-BpuKtqzI.js";import"./styleUtils-kDvAHFL6.js";import"./RelationshipQuery-Bcy5RvAn.js";import"./NormalizationBinParametersMixin-DZYeN1j4.js";import"./labelUtils-D988wMte.js";import"./LayerFloorInfo-C5z_TTH9.js";import"./Relationship-Bw2jeO79.js";import"./serviceCapabilitiesUtils-CC3rOVtB.js";import"./infoFor3D-DhzudQro.js";import"./portalItemUtils-DflwgpVb.js";import"./projectionUtils-Ck7cBeJK.js";import"./Layer-Bp_m3QXA.js";import"./editsZScale-CSTpnkiS.js";import"./queryZScale-CTsK4ibn.js";import"./APIKeyMixin-BFHERGnk.js";import"./ArcGISService-iCP0wdWh.js";import"./BlendLayer-QrPo5Hot.js";import"./jsonUtils-BzvnS-eb.js";import"./parser-DnvMkHgv.js";import"./mat4f32-Djp3mnm5.js";import"./mat4-DPRg57JE.js";import"./common-DQOJ18NT.js";import"./CustomParametersMixin-C1-v3INT.js";import"./DisplayFilteredLayer-UM4pYJfq.js";import"./scaleUtils-DhTu_gnZ.js";import"./displayFilterUtils-Cf-7nv9m.js";import"./EditBusLayer-BZDQpOkz.js";import"./FeatureEffectLayer-C2A8Psxc.js";import"./FeatureEffect-B2yECRh4.js";import"./FeatureFilter-CgCVeYkg.js";import"./FeatureReductionLayer-Bt75vp6_.js";import"./FeatureReductionSelection-BZ7WaPru.js";import"./jsonUtils-CsdSa2Zn.js";import"./typeUtils-Bd2-idN3.js";import"./ClassBreaksRenderer-CptnddQy.js";import"./LRUCache-BB1cebTv.js";import"./MemCache-BSBM3Sy1.js";import"./DictionaryScriptEvaluator-75VX_kUa.js";import"./Version-BeJWRrcp.js";import"./FieldsIndex-a2DTlUTr.js";import"./UnknownTimeZone-B0EljvFV.js";import"./ArcadeExpression-7GlLenFz.js";import"./TimeOnly-5WFwcN0B.js";import"./enum-5YUFr6E8.js";import"./utils-BV7DBUkI.js";import"./defaultCIMValues-CQAn2izL.js";import"./enums-_AFKM9Yk.js";import"./heatmapUtils-Bp_hghIY.js";import"./vec42-CKs01hkn.js";import"./vec4f64-DPb6J-GU.js";import"./MD5-MtSiOt06.js";import"./OrderedLayer-B23SnnES.js";import"./OrderByInfo-BynfvN0l.js";import"./PortalLayer-BK05lM3T.js";import"./PortalItem-CngPoFkL.js";import"./RefreshableLayer-B8iKAmbV.js";import"./ScaleRangeLayer-D0dGjZzY.js";import"./TemporalLayer-Bvv-ho_5.js";import"./TimeInfo-CsLQqROj.js";import"./TrackableLayer-DfXiWlB9.js";import"./FeatureTemplate-VowbS7Vp.js";import"./FeatureType-CTUNK1zr.js";import"./fieldProperties-B4M4f69X.js";import"./TitleCreator-CBAt7R9L.js";import"./versionUtils-DkUW_KHV.js";import"./styleUtils-UYjG69C0.js";import"./popupUtils-DlvM0VVI.js";import"./interfaces-CL2NbQte.js";import"./Queue-fsp6PtSa.js";import"./intl-BWrXByQm.js";import"./QueryEngineCapabilities-CsRUnGk7.js";let a=class extends v{constructor(t){super(t),this.type="csv",this.refresh=w(async e=>{await this.load();const{extent:s,timeExtent:n}=await this._connection.invoke("refresh",e);return s&&(this.sourceJSON.extent=s),n&&(this.sourceJSON.timeInfo.timeExtent=[n.start,n.end]),{dataChanged:!0,updates:{extent:this.sourceJSON.extent,timeInfo:this.sourceJSON.timeInfo}}})}load(t){const e=t!=null?t.signal:null;return this.addResolvingPromise(this._startWorker(e)),Promise.resolve(this)}destroy(){this._connection?.close(),this._connection=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(t,e={}){await this.load(e);const s=await this._connection.invoke("queryFeatures",t?t.toJSON():null,e);return C.fromJSON(s)}async queryFeaturesJSON(t,e={}){return await this.load(e),this._connection.invoke("queryFeatures",t?t.toJSON():null,e)}async queryFeatureCount(t,e={}){return await this.load(e),this._connection.invoke("queryFeatureCount",t?t.toJSON():null,e)}async queryObjectIds(t,e={}){return await this.load(e),this._connection.invoke("queryObjectIds",t?t.toJSON():null,e)}async queryExtent(t,e={}){await this.load(e);const s=await this._connection.invoke("queryExtent",t?t.toJSON():null,e);return{count:s.count,extent:S.fromJSON(s.extent)}}async querySnapping(t,e={}){return await this.load(e),this._connection.invoke("querySnapping",t,e)}async queryAttributeBins(t,e={}){return await this.load(),this._connection.invoke("queryAttributeBins",t?t.toJSON():null,e)}async _startWorker(t){this._connection=await x("CSVSourceWorker",{strategy:O("feature-layers-workers")?"dedicated":"local",signal:t,registryTarget:this});const{url:e,delimiter:s,fields:n,latitudeField:c,longitudeField:h,spatialReference:y,timeInfo:f}=this.loadOptions,p=await this._connection.invoke("load",{url:e,customParameters:this.customParameters,parsingOptions:{delimiter:s,fields:n?.map(g=>g.toJSON()),latitudeField:c,longitudeField:h,spatialReference:y?.toJSON(),timeInfo:f?.toJSON()}},{signal:t});this.locationInfo=p.locationInfo,this.sourceJSON=p.layerDefinition,this.delimiter=p.delimiter}};i([r()],a.prototype,"type",void 0),i([r()],a.prototype,"loadOptions",void 0),i([r()],a.prototype,"customParameters",void 0),i([r()],a.prototype,"locationInfo",void 0),i([r()],a.prototype,"sourceJSON",void 0),i([r()],a.prototype,"delimiter",void 0),a=i([d("esri.layers.graphics.sources.CSVSource")],a);function u(t,e){throw new m(e,`CSVLayer (title: ${t.title}, id: ${t.id}) cannot be saved to a portal item`)}let o=class extends J{constructor(...t){super(...t),this.geometryType="point",this.capabilities=P(!1,!1),this.delimiter=null,this.editingEnabled=!1,this.fields=null,this.latitudeField=null,this.locationType="coordinates",this.longitudeField=null,this.operationalLayerType="CSV",this.outFields=["*"],this.path=null,this.spatialReference=b.WGS84,this.source=null,this.type="csv"}normalizeCtorArgs(t,e){return typeof t=="string"?{url:t,...e}:t}load(t){const e=t!=null?t.signal:null,s=this.loadFromPortal({supportedTypes:["CSV"],supportsData:!1},t).catch(F).then(async()=>this.initLayerProperties(await this.createGraphicsSource(e)));return this.addResolvingPromise(s),Promise.resolve(this)}get isTable(){return this.loaded&&this.geometryType==null}readWebMapLabelsVisible(t,e){return e.showLabels!=null?e.showLabels:!!e.layerDefinition?.drawingInfo?.labelingInfo}set url(t){if(!t)return void this._set("url",t);const e=q(t);this._set("url",e.path),e.query&&(this.customParameters={...this.customParameters,...e.query})}async createGraphicsSource(t){const e=new a({loadOptions:{delimiter:this.delimiter,fields:this.fields,latitudeField:this.latitudeField??void 0,longitudeField:this.longitudeField??void 0,spatialReference:this.spatialReference??void 0,timeInfo:this.timeInfo??void 0,url:this.url},customParameters:this.customParameters??void 0});return this._set("source",e),await e.load({signal:t}),this.read({locationInfo:e.locationInfo,columnDelimiter:e.delimiter},{origin:"service",url:this.parsedUrl}),e}queryFeatures(t,e){return this.load().then(()=>this.source.queryFeatures(l.from(t)||this.createQuery())).then(s=>{if(s?.features)for(const n of s.features)n.layer=n.sourceLayer=this;return s})}async queryObjectIds(t,e){return await this.load(),this.source.queryObjectIds(l.from(t)||this.createQuery())}queryFeatureCount(t,e){return this.load().then(()=>this.source.queryFeatureCount(l.from(t)||this.createQuery()))}queryExtent(t,e){return this.load().then(()=>this.source.queryExtent(l.from(t)||this.createQuery()))}read(t,e){super.read(t,e),e&&e.origin==="service"&&this.revert(["latitudeField","longitudeField"],"service")}write(t,e){return super.write(t,{...e,writeLayerSchema:!0})}clone(){throw new m("csv-layer:clone",`CSVLayer (title: ${this.title}, id: ${this.id}) cannot be cloned`)}async save(t){return u(this,"csv-layer:save")}async saveAs(t,e){return u(this,"csv-layer:save-as")}async hasDataChanged(){try{const{dataChanged:t,updates:e}=await this.source.refresh(this.customParameters);return e!=null&&this.read(e,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),t}catch{}return!1}_verifyFields(){}_verifySource(){}_hasMemorySource(){return!1}};i([r({readOnly:!0,json:{read:!1,write:!1}})],o.prototype,"capabilities",void 0),i([r({type:[","," ",";","|","	"],json:{read:{source:"columnDelimiter"},write:{target:"columnDelimiter",ignoreOrigin:!0}}})],o.prototype,"delimiter",void 0),i([r({readOnly:!0,type:Boolean,json:{origins:{"web-scene":{read:!1,write:!1}}}})],o.prototype,"editingEnabled",void 0),i([r({json:{read:{source:"layerDefinition.fields"},write:{target:"layerDefinition.fields"}}})],o.prototype,"fields",void 0),i([r({type:Boolean,readOnly:!0})],o.prototype,"isTable",null),i([I("web-map","labelsVisible",["layerDefinition.drawingInfo.labelingInfo","showLabels"])],o.prototype,"readWebMapLabelsVisible",null),i([r({type:String,json:{read:{source:"locationInfo.latitudeFieldName"},write:{target:"locationInfo.latitudeFieldName",ignoreOrigin:!0}}})],o.prototype,"latitudeField",void 0),i([r({type:["show","hide"]})],o.prototype,"listMode",void 0),i([r({type:["coordinates"],json:{read:{source:"locationInfo.locationType"},write:{target:"locationInfo.locationType",ignoreOrigin:!0,isRequired:!0}}})],o.prototype,"locationType",void 0),i([r({type:String,json:{read:{source:"locationInfo.longitudeFieldName"},write:{target:"locationInfo.longitudeFieldName",ignoreOrigin:!0}}})],o.prototype,"longitudeField",void 0),i([r({type:["CSV"]})],o.prototype,"operationalLayerType",void 0),i([r()],o.prototype,"outFields",void 0),i([r({type:String,json:{origins:{"web-scene":{read:!1,write:!1}},read:!1,write:!1}})],o.prototype,"path",void 0),i([r({json:{read:!1},cast:null,type:a,readOnly:!0})],o.prototype,"source",void 0),i([r({json:{read:!1},value:"csv",readOnly:!0})],o.prototype,"type",void 0),i([r({json:{read:_,write:{isRequired:!0,ignoreOrigin:!0,writer:N}}})],o.prototype,"url",null),o=i([d("esri.layers.CSVLayer")],o);const Fe=o;export{Fe as default};
